{"version":3,"sources":["../src/app.js"],"names":["use","init","preload","ns","fallbackNS","detection","lookupCookie","backend","loadPath","resolve","__dirname","addPath","app","set","origin","cb","whitelist","process","env","CORS_ORIGIN","split","includes","credentials","urlencoded","extended","json","store","client","name","resave","saveUninitialized","secret","SESSION_SECRET","handle","initialize","session","NODE_ENV","get","req","res","message","render","params","template","t","v","send","html","user","displayName","type","schema","context","graphiql","pretty","formatError","error","report","originalError","code","state","locations","path","pe","skipNodeFiles","skipPackage","err","next","stderr","write"],"mappings":"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","file":"app.js","sourcesContent":["/**\n * Copyright Â© 2016-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* @flow */\n\nimport path from 'path';\nimport express from 'express';\nimport cors from 'cors';\nimport compression from 'compression';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport session from 'express-session';\nimport connectRedis from 'connect-redis';\nimport flash from 'express-flash';\nimport i18next from 'i18next';\nimport i18nextMiddleware, {\n  LanguageDetector,\n} from 'i18next-express-middleware';\nimport i18nextBackend from 'i18next-node-fs-backend';\nimport expressGraphQL from 'express-graphql';\nimport PrettyError from 'pretty-error';\nimport { printSchema } from 'graphql';\n\nimport email from './email';\nimport redis from './redis';\nimport passport from './passport';\nimport accountRoutes from './routes/account';\nimport schema from './schema';\nimport Context from './Context';\nimport errors from './errors';\n\ni18next\n  .use(LanguageDetector)\n  .use(i18nextBackend)\n  .init({\n    preload: ['en', 'de'],\n    ns: ['common', 'email'],\n    fallbackNS: 'common',\n    detection: {\n      lookupCookie: 'lng',\n    },\n    backend: {\n      loadPath: path.resolve(__dirname, '../locales/{{lng}}/{{ns}}.json'),\n      addPath: path.resolve(\n        __dirname,\n        '../locales/{{lng}}/{{ns}}.missing.json',\n      ),\n    },\n  });\n\nconst app = express();\n\napp.set('trust proxy', 'loopback');\n\napp.use(\n  cors({\n    origin(origin, cb) {\n      const whitelist = process.env.CORS_ORIGIN\n        ? process.env.CORS_ORIGIN.split(',')\n        : [];\n      cb(null, whitelist.includes(origin));\n    },\n    credentials: true,\n  }),\n);\n\napp.use(compression());\napp.use(cookieParser());\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json());\napp.use(\n  session({\n    store: new (connectRedis(session))({ client: redis }),\n    name: 'sid',\n    resave: true,\n    saveUninitialized: true,\n    secret: process.env.SESSION_SECRET,\n  }),\n);\napp.use(i18nextMiddleware.handle(i18next));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\n\napp.use(accountRoutes);\n\n// The following routes are intended to be used in development mode only\nif (process.env.NODE_ENV !== 'production') {\n  // A route for testing email templates\n  app.get('/:email(email|emails)/:template', (req, res) => {\n    const message = email.render(req.params.template, { t: req.t, v: 123 });\n    res.send(message.html);\n  });\n\n  // A route for testing authentication/authorization\n  app.get('/', (req, res) => {\n    if (req.user) {\n      res.send(\n        `<p>${req.t('Welcome, {{user}}!', {\n          user: req.user.displayName,\n        })} (<a href=\"javascript:fetch('/login/clear', { method: 'POST', credentials: 'include' }).then(() => window.location = '/')\">${req.t(\n          'log out',\n        )}</a>)</p>`,\n      );\n    } else {\n      res.send(\n        `<p>${req.t('Welcome, guest!')} (<a href=\"/login/facebook\">${req.t(\n          'sign in',\n        )}</a>)</p>`,\n      );\n    }\n  });\n}\n\napp.get('/graphql/schema', (req, res) => {\n  res.type('text/plain').send(printSchema(schema));\n});\n\napp.use(\n  '/graphql',\n  expressGraphQL(req => ({\n    schema,\n    context: new Context(req),\n    graphiql: process.env.NODE_ENV !== 'production',\n    pretty: process.env.NODE_ENV !== 'production',\n    formatError: (error: any) => {\n      errors.report(error.originalError || error);\n      return {\n        message: error.message,\n        code: error.originalError && error.originalError.code,\n        state: error.originalError && error.originalError.state,\n        locations: error.locations,\n        path: error.path,\n      };\n    },\n  })),\n);\n\nconst pe = new PrettyError();\npe.skipNodeFiles();\npe.skipPackage('express');\n\napp.use((err, req, res, next) => {\n  process.stderr.write(pe.render(err));\n  next();\n});\n\nexport default app;\n"]}
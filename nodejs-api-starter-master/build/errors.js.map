{"version":3,"sources":["../src/errors.js"],"names":["report","error","console","ValidationError","Error","constructor","errors","code","state","reduce","result","Object","prototype","hasOwnProperty","call","key","push","message","defineProperty","value","enumerable","UnauthorizedError","ForbiddenError"],"mappings":";;;;;;;;;;;AAWA;AACA,SAASA,MAAT,CAAgBC,KAAhB,EAA8B;AAC5B;AACAC,UAAQD,KAAR,CAAcA,KAAd;AACD,C,CAfD;;;;;KAiBO,MAAME,eAAN,SAA8BC,KAA9B,CAAoC;AAIzCC,cAAYC,MAAZ,EAAiD;AAC/C,UAAM,yBAAN,EAD+C,KAHjDC,IAGiD,GAH1C,GAG0C;AAE/C,SAAKC,KAAL,GAAaF,OAAOG,MAAP,CAAc,CAACC,MAAD,EAAST,KAAT,KAAmB;AAC5C,UAAIU,OAAOC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CT,MAAMc,GAAnD,CAAJ,EAA6D;AAC3DL,eAAOT,MAAMc,GAAb,EAAkBC,IAAlB,CAAuBf,MAAMgB,OAA7B;AACD,OAFD,MAEO;AACLN,eAAOO,cAAP,CAAsBR,MAAtB,EAA8BT,MAAMc,GAApC,EAAyC;AACvCI,iBAAO,CAAClB,MAAMgB,OAAP,CADgC;AAEvCG,sBAAY,IAF2B,EAAzC;;AAID;AACD,aAAOV,MAAP;AACD,KAVY,EAUV,EAVU,CAAb;AAWD,GAjBwC,C,QAA9BP,e,GAAAA,e;;;AAoBN,MAAMkB,iBAAN,SAAgCjB,KAAhC,CAAsC;AAC3CG,QAD2C,GACpC,GADoC;AAE3CU,WAF2C,GAEjC,KAAKA,OAAL,IAAgB,6BAFiB,U,QAAhCI,iB,GAAAA,iB;;;AAKN,MAAMC,cAAN,SAA6BlB,KAA7B,CAAmC;AACxCG,QADwC,GACjC,GADiC;AAExCU,WAFwC,GAE9B,KAAKA,OAAL,IAAgB,mBAFc,W,QAA7BK,c,GAAAA,c;;;AAKE,EAAEtB,MAAF,E","file":"errors.js","sourcesContent":["/**\n * Copyright Â© 2016-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* @flow */\n\nimport type { ValidationErrorEntry } from './types';\n\n// TODO: Log the error to Google Stackdriver, Rollbar etc.\nfunction report(error: Error) {\n  // eslint-disable-next-line no-console\n  console.error(error);\n}\n\nexport class ValidationError extends Error {\n  code = 400;\n  state: any;\n\n  constructor(errors: Array<ValidationErrorEntry>) {\n    super('The request is invalid.');\n    this.state = errors.reduce((result, error) => {\n      if (Object.prototype.hasOwnProperty.call(result, error.key)) {\n        result[error.key].push(error.message);\n      } else {\n        Object.defineProperty(result, error.key, {\n          value: [error.message],\n          enumerable: true,\n        });\n      }\n      return result;\n    }, {});\n  }\n}\n\nexport class UnauthorizedError extends Error {\n  code = 401;\n  message = this.message || 'Anonymous access is denied.';\n}\n\nexport class ForbiddenError extends Error {\n  code = 403;\n  message = this.message || 'Access is denied.';\n}\n\nexport default { report };\n"]}
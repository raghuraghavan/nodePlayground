{"version":3,"sources":["../../../src/schema/user/queries.js"],"names":["me","type","resolve","root","args","ctx","user","userById","load","id"],"mappings":";;;;;;;;;AASA,sC;;;AAGA,MAAMA,KAAK;AACTC,0BADS;AAETC,UAAQC,IAAR,EAAmBC,IAAnB,EAA8BC,GAA9B,EAA4C;AAC1C,WAAOA,IAAIC,IAAJ,IAAYD,IAAIE,QAAJ,CAAaC,IAAb,CAAkBH,IAAIC,IAAJ,CAASG,EAA3B,CAAnB;AACD,GAJQ,EAAX,C,CAZA;;;;;4BAmBe,EACbT,EADa,E","file":"queries.js","sourcesContent":["/**\n * Copyright Â© 2016-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* @flow */\n\nimport UserType from './UserType';\nimport type Context from '../../Context';\n\nconst me = {\n  type: UserType,\n  resolve(root: any, args: any, ctx: Context) {\n    return ctx.user && ctx.userById.load(ctx.user.id);\n  },\n};\n\nexport default {\n  me,\n};\n"]}
{"version":3,"sources":["../../../src/schema/story/StoryType.js"],"names":["name","interfaces","fields","id","author","type","resolve","parent","args","ctx","userById","load","author_id","title","url","text","comments","commentsByStoryId","pointsCount","storyPointsCount","commentsCount","storyCommentsCount","createdAt","created_at","updatedAt","updated_at"],"mappings":";;;;;;;;;AASA;;;;;;;AAOA;;AAEA,4C;AACA,qD;AACA,+B;;;AAGe,+BAAsB;AACnCA,QAAM,OAD6B;AAEnCC,cAAY,qBAFuB;;AAInCC,UAAQ;AACNC,QAAI,kCADE;;AAGNC,YAAQ;AACNC,YAAM,+CADA;AAENC,cAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAAoC;AAClC,eAAOA,IAAIC,QAAJ,CAAaC,IAAb,CAAkBJ,OAAOK,SAAzB,CAAP;AACD,OAJK,EAHF;;;AAUNC,WAAO;AACLR,YAAM,mDADD,EAVD;;;AAcNS,SAAK;AACHT,kCADG,EAdC;;;AAkBNU,UAAM;AACJV,kCADI,EAlBA;;;AAsBNW,cAAU;AACRX,YAAM,+CADE;AAERC,cAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAAoC;AAClC,eAAOA,IAAIQ,iBAAJ,CAAsBN,IAAtB,CAA2BJ,OAAOJ,EAAlC,CAAP;AACD,OAJO,EAtBJ;;;AA6BNe,iBAAa;AACXb,YAAM,gDADK;AAEXC,cAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAAoC;AAClC,eAAOA,IAAIU,gBAAJ,CAAqBR,IAArB,CAA0BJ,OAAOJ,EAAjC,CAAP;AACD,OAJU,EA7BP;;;AAoCNiB,mBAAe;AACbf,YAAM,gDADO;AAEbC,cAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,GAAtB,EAAoC;AAClC,eAAOA,IAAIY,kBAAJ,CAAuBV,IAAvB,CAA4BJ,OAAOJ,EAAnC,CAAP;AACD,OAJY,EApCT;;;AA2CNmB,eAAW;AACTjB,YAAM,mDADG;AAETC,cAAQC,MAAR,EAAgB;AACd,eAAOA,OAAOgB,UAAd;AACD,OAJQ,EA3CL;;;AAkDNC,eAAW;AACTnB,YAAM,mDADG;AAETC,cAAQC,MAAR,EAAgB;AACd,eAAOA,OAAOkB,UAAd;AACD,OAJQ,EAlDL,EAJ2B,EAAtB,C,EAvBf","file":"StoryType.js","sourcesContent":["/**\n * Copyright Â© 2016-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* @flow */\n\nimport {\n  GraphQLObjectType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLInt,\n  GraphQLString,\n} from 'graphql';\nimport { globalIdField } from 'graphql-relay';\n\nimport UserType from '../user/UserType';\nimport CommentType from '../comment/CommentType';\nimport { nodeInterface } from '../node';\nimport type Context from '../../Context';\n\nexport default new GraphQLObjectType({\n  name: 'Story',\n  interfaces: [nodeInterface],\n\n  fields: {\n    id: globalIdField(),\n\n    author: {\n      type: new GraphQLNonNull(UserType),\n      resolve(parent, args, ctx: Context) {\n        return ctx.userById.load(parent.author_id);\n      },\n    },\n\n    title: {\n      type: new GraphQLNonNull(GraphQLString),\n    },\n\n    url: {\n      type: GraphQLString,\n    },\n\n    text: {\n      type: GraphQLString,\n    },\n\n    comments: {\n      type: new GraphQLList(CommentType),\n      resolve(parent, args, ctx: Context) {\n        return ctx.commentsByStoryId.load(parent.id);\n      },\n    },\n\n    pointsCount: {\n      type: new GraphQLNonNull(GraphQLInt),\n      resolve(parent, args, ctx: Context) {\n        return ctx.storyPointsCount.load(parent.id);\n      },\n    },\n\n    commentsCount: {\n      type: new GraphQLNonNull(GraphQLInt),\n      resolve(parent, args, ctx: Context) {\n        return ctx.storyCommentsCount.load(parent.id);\n      },\n    },\n\n    createdAt: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve(parent) {\n        return parent.created_at;\n      },\n    },\n\n    updatedAt: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve(parent) {\n        return parent.updated_at;\n      },\n    },\n  },\n});\n"]}
{"version":3,"sources":["../../../src/schema/story/validate.js"],"names":["validate","input","ctx","errors","data","t","user","key","message","title","trim","push","isLength","min","max","url","isURL","text","author_id","id"],"mappings":";;;;;;;;;;;;;;;AAewBA,Q,CANxB,sC,qDAEA,sC,8FAXA;;;;;2OAee,SAASA,QAAT,CAAkBC,KAAlB,EAA8BC,GAA9B,EAA8D,CAC3E,MAAMC,SAAS,EAAf,CACA,MAAMC,OAAO,EAAb,CACA,MAAM,EAAEC,CAAF,EAAKC,IAAL,KAAcJ,GAApB,CAEA,IAAI,CAACI,IAAL,EAAW;AACT,UAAM,4BAAoB;AACxB,MAAEC,KAAK,EAAP,EAAWC,SAASH,EAAE,8CAAF,CAApB,EADwB,CAApB,CAAN;;AAGD;;AAED,MAAI,OAAOJ,MAAMQ,KAAb,KAAuB,WAAvB,IAAsCR,MAAMQ,KAAN,CAAYC,IAAZ,OAAuB,EAAjE,EAAqE;AACnEP,WAAOQ,IAAP,CAAY;AACVJ,WAAK,OADK;AAEVC,eAASH,EAAE,kCAAF,CAFC,EAAZ;;AAID,GALD,MAKO,IAAI,CAAC,oBAAUO,QAAV,CAAmBX,MAAMQ,KAAzB,EAAgC,EAAEI,KAAK,CAAP,EAAUC,KAAK,EAAf,EAAhC,CAAL,EAA2D;AAChEX,WAAOQ,IAAP,CAAY;AACVJ,WAAK,OADK;AAEVC,eAASH,EAAE,2DAAF,CAFC,EAAZ;;AAID,GALM,MAKA;AACLD,SAAKK,KAAL,GAAaR,MAAMQ,KAAnB;AACD;;AAED,MAAI,OAAOR,MAAMc,GAAb,KAAqB,WAArB,IAAoCd,MAAMc,GAAN,CAAUL,IAAV,OAAqB,EAA7D,EAAiE;AAC/D,QAAI,CAAC,oBAAUE,QAAV,CAAmBX,MAAMc,GAAzB,EAA8B,EAAED,KAAK,GAAP,EAA9B,CAAL,EAAkD;AAChDX,aAAOQ,IAAP,CAAY;AACVJ,aAAK,KADK;AAEVC,iBAASH,EAAE,0DAAF,CAFC,EAAZ;;AAID,KALD,MAKO,IAAI,CAAC,oBAAUW,KAAV,CAAgBf,MAAMc,GAAtB,CAAL,EAAiC;AACtCZ,aAAOQ,IAAP,CAAY,EAAEJ,KAAK,KAAP,EAAcC,SAASH,EAAE,qBAAF,CAAvB,EAAZ;AACD,KAFM,MAEA;AACLD,WAAKW,GAAL,GAAWd,MAAMc,GAAjB;AACD;AACF;;AAED,MAAI,OAAOd,MAAMgB,IAAb,KAAsB,WAAtB,IAAqChB,MAAMgB,IAAN,CAAWP,IAAX,OAAsB,EAA/D,EAAmE;AACjE,QAAI,CAAC,oBAAUE,QAAV,CAAmBX,MAAMgB,IAAzB,EAA+B,EAAEJ,KAAK,EAAP,EAAWC,KAAK,IAAhB,EAA/B,CAAL,EAA6D;AAC3DX,aAAOQ,IAAP,CAAY;AACVJ,aAAK,MADK;AAEVC,iBAASH;AACP,qEADO,CAFC,EAAZ;;;AAMD,KAPD,MAOO;AACLD,WAAKa,IAAL,GAAYhB,MAAMgB,IAAlB;AACD;AACF;;AAED,MAAIb,KAAKW,GAAL,IAAYX,KAAKa,IAArB,EAA2B;AACzBd,WAAOQ,IAAP,CAAY;AACVJ,WAAK,EADK;AAEVC,eAASH,EAAE,4DAAF,CAFC,EAAZ;;AAID,GALD,MAKO,IAAI,CAACJ,MAAMc,GAAP,IAAc,CAACd,MAAMgB,IAAzB,EAA+B;AACpCd,WAAOQ,IAAP,CAAY;AACVJ,WAAK,EADK;AAEVC,eAASH,EAAE,+CAAF,CAFC,EAAZ;;AAID;;AAEDD,OAAKc,SAAL,GAAiBZ,KAAKa,EAAtB;AACA,SAAO,EAAEf,IAAF,EAAQD,MAAR,EAAP;AACD","file":"validate.js","sourcesContent":["/**\n * Copyright Â© 2016-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* @flow */\n\nimport validator from 'validator';\n\nimport { ValidationError } from '../../errors';\nimport type Context from '../../Context';\nimport type { ValidationOutput } from '../../types';\n\nexport default function validate(input: any, ctx: Context): ValidationOutput {\n  const errors = [];\n  const data = {};\n  const { t, user } = ctx;\n\n  if (!user) {\n    throw new ValidationError([\n      { key: '', message: t('Only authenticated users can create stories.') },\n    ]);\n  }\n\n  if (typeof input.title === 'undefined' || input.title.trim() === '') {\n    errors.push({\n      key: 'title',\n      message: t('The title field cannot be empty.'),\n    });\n  } else if (!validator.isLength(input.title, { min: 3, max: 80 })) {\n    errors.push({\n      key: 'title',\n      message: t('The title field must be between 3 and 80 characters long.'),\n    });\n  } else {\n    data.title = input.title;\n  }\n\n  if (typeof input.url !== 'undefined' && input.url.trim() !== '') {\n    if (!validator.isLength(input.url, { max: 200 })) {\n      errors.push({\n        key: 'url',\n        message: t('The URL field cannot be longer than 200 characters long.'),\n      });\n    } else if (!validator.isURL(input.url)) {\n      errors.push({ key: 'url', message: t('The URL is invalid.') });\n    } else {\n      data.url = input.url;\n    }\n  }\n\n  if (typeof input.text !== 'undefined' && input.text.trim() !== '') {\n    if (!validator.isLength(input.text, { min: 20, max: 2000 })) {\n      errors.push({\n        key: 'text',\n        message: t(\n          'The text field must be between 20 and 2000 characters long.',\n        ),\n      });\n    } else {\n      data.text = input.text;\n    }\n  }\n\n  if (data.url && data.text) {\n    errors.push({\n      key: '',\n      message: t('Please fill either the URL or the text field but not both.'),\n    });\n  } else if (!input.url && !input.text) {\n    errors.push({\n      key: '',\n      message: t('Please fill either the URL or the text field.'),\n    });\n  }\n\n  data.author_id = user.id;\n  return { data, errors };\n}\n"]}
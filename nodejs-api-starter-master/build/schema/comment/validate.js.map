{"version":3,"sources":["../../../src/schema/comment/validate.js"],"names":["validate","input","ctx","errors","data","t","user","key","message","text","trim","push","isLength","min","max"],"mappings":";;;;;;;;;;;;;;;AAewBA,Q,CANxB,sC,qDAEA,sC,8FAXA;;;;;2OAee,SAASA,QAAT,CAAkBC,KAAlB,EAA8BC,GAA9B,EAA8D,CAC3E,MAAMC,SAAS,EAAf,CACA,MAAMC,OAAO,EAAb,CACA,MAAM,EAAEC,CAAF,EAAKC,IAAL,KAAcJ,GAApB,CAEA,IAAI,CAACI,IAAL,EAAW;AACT,UAAM,4BAAoB;AACxB,MAAEC,KAAK,EAAP,EAAWC,SAASH,EAAE,4CAAF,CAApB,EADwB,CAApB,CAAN;;AAGD;;AAED,MAAI,OAAOJ,MAAMQ,IAAb,KAAsB,WAAtB,IAAqCR,MAAMQ,IAAN,CAAWC,IAAX,OAAsB,EAA/D,EAAmE;AACjEP,WAAOQ,IAAP,CAAY;AACVJ,WAAK,MADK;AAEVC,eAASH,EAAE,oCAAF,CAFC,EAAZ;;AAID,GALD,MAKO,IAAI,CAAC,oBAAUO,QAAV,CAAmBX,MAAMQ,IAAzB,EAA+B,EAAEI,KAAK,EAAP,EAAWC,KAAK,IAAhB,EAA/B,CAAL,EAA6D;AAClEX,WAAOQ,IAAP,CAAY;AACVJ,WAAK,MADK;AAEVC,eAASH,EAAE,0DAAF,CAFC,EAAZ;;AAID,GALM,MAKA;AACLD,SAAKK,IAAL,GAAYR,MAAMQ,IAAlB;AACD;;AAED,SAAO,EAAEL,IAAF,EAAQD,MAAR,EAAP;AACD","file":"validate.js","sourcesContent":["/**\n * Copyright Â© 2016-present Kriasoft.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\n/* @flow */\n\nimport validator from 'validator';\n\nimport { ValidationError } from '../../errors';\nimport type Context from '../../Context';\nimport type { ValidationOutput } from '../../types';\n\nexport default function validate(input: any, ctx: Context): ValidationOutput {\n  const errors = [];\n  const data = {};\n  const { t, user } = ctx;\n\n  if (!user) {\n    throw new ValidationError([\n      { key: '', message: t('Only authenticated users can add comments.') },\n    ]);\n  }\n\n  if (typeof input.text === 'undefined' || input.text.trim() !== '') {\n    errors.push({\n      key: 'text',\n      message: t('The comment field cannot be empty.'),\n    });\n  } else if (!validator.isLength(input.text, { min: 20, max: 2000 })) {\n    errors.push({\n      key: 'text',\n      message: t('The comment must be between 20 and 2000 characters long.'),\n    });\n  } else {\n    data.text = input.text;\n  }\n\n  return { data, errors };\n}\n"]}